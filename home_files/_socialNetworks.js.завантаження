!function e(n,t,r){function o(a,l){if(!t[a]){if(!n[a]){var s="function"==typeof require&&require;if(!l&&s)return s(a,!0);if(i)return i(a,!0);var c=new Error("Cannot find module '"+a+"'");throw c.code="MODULE_NOT_FOUND",c}var u=t[a]={exports:{}};n[a][0].call(u.exports,(function(e){return o(n[a][1][e]||e)}),u,u.exports,e,n,t,r)}return t[a].exports}for(var i="function"==typeof require&&require,a=0;a<r.length;a++)o(r[a]);return o}({1:[function(e,n,t){RA.fn.socialNetworks=function(){const n=e("repo/social-networks/main");return{init:function(e){new n(e)}}}()},{"repo/social-networks/main":2}],2:[function(e,n,t){n.exports=function(){const e=RA.repo.yandexCounter,n=RA.repo.dynamic;let t;function r(e){e&&(this.block=e,this.init())}return r.prototype={init:function(){this.bindEvents()},bindEvents:function(){const r=this;r.parallaxBlock=r.block.querySelector(".js-social-networks-parallax"),r.parallaxImg=r.parallaxBlock.querySelector(".smart-image img"),window.addEventListener("scroll",(()=>r.scrollParallax())),window.addEventListener("resize",(()=>r.scrollParallax())),r.scrollParallax(),e&&(t?t.observe(r.block):(n.require("fn.intersectionObserver",!0),n.ready((function(){t?t.observe(r.block):(t=new RA.fn.IntersectionObserver((function(n){n.isIntersecting&&(t.unobserve(n.target),e.initReach("social_onboarding_show"))}),{threshold:.9})).observe(r.block)}))))},scrollParallax:function(){const e=this.parallaxBlock,n=this.parallaxImg;if(e&&n){const t=window.innerHeight,r=e.getBoundingClientRect(),o=n.getBoundingClientRect(),i=o.height-r.height,a=o.height/o.width>120/295&&(o.width>295||o.height>120),l=window.innerWidth<=640?90:70,s=.05,c=t/2;let u=(r.y+r.height/2-c)*s-l;u=u>i?i:u,a||(u=0),e.classList.toggle("parallaxed",a),n.style.transform="translateY("+(u>0?0:u)+"px)"}}},r}()},{}]},{},[1]);